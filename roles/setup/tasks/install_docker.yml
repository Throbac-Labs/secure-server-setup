---
- name: Install aptitude using apt
  apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
  
- name: Install required system packages for Docker
  apt: name={{ docker_required_packages }} state=latest update_cache=yes

- name: Add Docker GPG key
  apt_key:
    url: "{{ docker_gpg_url }}"
    state: present
 
- name: Add Docker repository
  apt_repository:
    repo: "{{ docker_repo }}"
    state: present

- name: Install Docker
  apt: name={{ docker_packges }} state=latest update_cache=yes

- name: Add adminstrator to docker group
  ansible.builtin.user:
    name: "{{ admin_user }}"
    groups: docker
    append: yes
    
- name: reset ssh connection to allow user changes to affect ansible user
  meta: reset_connection

- name: Install packages required for ansible to interact w/ python daemon on host
  apt:
    name:
      - python3
      - python3-pip
    state: present
    update_cache: false
    
- name: Install required python packages
  pip:
    name:
      - docker
      - docker-compose
    state: present

- name: Check to see if compose is already installed
  command: "which docker-compose"
  ignore_errors: true
  register: which_compose

- name: Debug which_compose
  debug:
    msg: "{{ which_compose.stdout }}"

- name: Get latest version of compose
  shell: curl -s "https://api.github.com/repos/docker/compose/releases/latest" | grep '"tag_name":' | cut -d '"' -f4
  register: compose_latest_version
  when: which_compose.stdout == ""

- name: debug compose latest version
  debug:
    msg: "latest compose: {{ compose_latest_version.stdout }}"
  when: which_compose.stdout == ""

- name: Install compose
  command: 'curl -sSL https://github.com/docker/compose/releases/download/{{ compose_latest_version.stdout }}/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose'  
  become: true
  when: which_compose.stdout == ""

- name: Set perms on docker-compose binary
  file:
    path: '/usr/local/bin/docker-compose'
    owner: 'root'
    group: 'root'
    mode: 0755
  become: true
